{{add-listener
  this.landscapeListener
  'newLandscapeData'
  this.receiveNewLandscapeData
}}
{{add-listener this.timestampRepo 'updated' this.updateTimestampList}}

{{did-insert this.setupListeners}}
<div id='vizspace' {{sync-state}}>
  {{#if this.showAR}}
    <ArRendering
      @id='landscape1'
      @landscapeData={{this.landscapeData}}
      @selectedTimestampRecords={{this.selectedTimestampRecords}}
      @openLandscapeView={{this.openLandscapeView}}
      @toggleSettingsSidebarComponent={{this.toggleSettingsSidebarComponent}}
      @toggleVisualizationUpdating={{this.toggleVisualizationUpdating}}
      @visualizationPaused={{this.visualizationPaused}}
      @components={{this.components}}
      @removeComponent={{this.removeComponent}}
      @openSettingsSidebar={{this.openSettingsSidebar}}
      @closeDataSelection={{this.closeDataSelection}}
      @showSettingsSidebar={{this.showSettingsSidebar}}
      @applicationArgs={{this.applicationArgs}}
    />
  {{else}}
    {{#if (and this.flag this.showVR)}}
      <VrRendering
        @id='landscape1'
        @landscapeData={{this.landscapeData}}
        @selectedTimestampRecords={{this.selectedTimestampRecords}}
        @components={{this.components}}
        @removeComponent={{this.removeComponent}}
        @openSettingsSidebar={{this.openSettingsSidebar}}
        @closeDataSelection={{this.closeDataSelection}}
        @showSettingsSidebar={{this.showSettingsSidebar}}
        @toggleVisualizationUpdating={{this.toggleVisualizationUpdating}}
        @visualizationPaused={{this.visualizationPaused}}
        @applicationArgs={{this.applicationArgs}}
        @debugMode={{this.flag}}
      />
      <div class='position-absolute mt-6 ml-3'>
        <BsButton
          id='backToLandscapeButton'
          @onClick={{this.openLandscapeView}}
          @type='secondary'
          @outline={{true}}
          title='Back to Landscape View'
        >
          {{svg-jar 'reply-16' class='octicon align-middle'}}
        </BsButton>
      </div>

    {{else}}
      {{#if this.isLandscapeExistentAndEmpty}}
        <div class='container-fluid mt-6'>
          <div class='jumbotron'>
            <h2>Empty Landscape received!</h2>
            <p>A new landscape will be fetched every 10 seconds.</p>
          </div>
          <div class='spinner-center-3' role='status'></div>
        </div>
      {{else if this.allLandscapeDataExistsAndNotEmpty}}

        {{#if this.showVR}}

          <VrRendering
            @id='landscape1'
            @landscapeData={{this.landscapeData}}
            @selectedTimestampRecords={{this.selectedTimestampRecords}}
            @components={{this.components}}
            @removeComponent={{this.removeComponent}}
            @openDataSelection={{this.openDataSelection}}
            @closeDataSelection={{this.closeDataSelection}}
            @showDataSelection={{this.showDataSelection}}
            @toggleVisualizationUpdating={{this.toggleVisualizationUpdating}}
            @visualizationPaused={{this.visualizationPaused}}
            @applicationArgs={{this.applicationArgs}}
            @debugMode={{this.flag}}
          />

        {{else}}
          <Visualization::Rendering::BrowserRendering
          @landscapeData={{this.landscapeData}}
          @components={{this.components}}
          @componentsToolsSidebar={{this.componentsToolsSidebar}}
          @removeComponent={{this.removeComponent}}
          @removeToolsSidebarComponent={{this.removeToolsSidebarComponent}}
          @closeDataSelection={{this.closeDataSelection}}
          @closeToolsSidebar={{this.closeToolsSidebar}}
          @openSettingsSidebar={{this.openSettingsSidebar}}
          @openToolsSidebar={{this.openToolsSidebar}}
          @showSettingsSidebar={{this.showSettingsSidebar}}
          @showToolsSidebar={{this.showToolsSidebar}}
          @toggleSettingsSidebarComponent={{this.toggleSettingsSidebarComponent}}
          @toggleToolsSidebarComponent={{this.toggleToolsSidebarComponent}}
          @toggleVisualizationUpdating={{this.toggleVisualizationUpdating}}
          @visualizationPaused={{this.visualizationPaused}}
          @switchToAR={{this.switchToAR}}
          @switchToVR={{this.switchToVR}}
          @selectedTimestampRecords={{this.selectedTimestampRecords}}
          @applicationArgs={{this.applicationArgs}}
        />

          {{#unless this.showTimeline}}
            <button
              id='VrButton'
              type='button'
              {{did-insert this.updateVrStatus}}
              {{on 'click' this.switchToVR}}
            >
              {{this.buttonText}}
            </button>
          {{/unless}}
          <!-- <button
            id='VrButton'
            class={{if this.isTimelineActive 'test1' 'test2'}}
            title={{if this.isTimelineActive 'test1' 'test2'}}
            type='button'
            {{did-insert this.updateVrStatus}}
            {{on 'click' this.switchToVR}}
          >
            {{this.buttonText}}
          </button> -->
        {{/if}}

      {{else}}
        <div class='container-fluid mt-6'>
          <div class='jumbotron'>
            <h2>No Landscape found!</h2>
            <p>A new landscape will be fetched every 10 seconds.</p>
            <BsButton
              @onClick={{this.switchToAR}}
              @type='secondary'
              @outline={{true}}
              title='Enter AR'
            >
              Enter AR
            </BsButton>
            <BsButton
              @onClick={{this.switchToVR}}
              @type='secondary'
              @outline={{true}}
              title='Enter VR'
            >
              Enter VR
            </BsButton>
          </div>
          <div class='spinner-center-3' role='status'></div>
        </div>
      {{/if}}
    {{/if}}
  {{/if}}
</div>
{{! timeline }}

{{#if this.showTimeline}}
  <div id='timeline-content'>

    <BsButton
      @onClick={{this.toggleTimeline}}
      @type='secondary'
      @outline={{true}}
      class='btn-timeline'
      title={{if this.isTimelineActive 'Hide Timeline' 'Show Timeline'}}
    >

      <button
        id='VrButton'
        class='btn-timeline-above'
        type='button'
        {{did-insert this.updateVrStatus}}
        {{on 'click' this.switchToVR}}
      >
        {{this.buttonText}}
      </button>

      {{#unless this.isTimelineActive}}
        <span class='pr-1'>Show Timeline</span>
      {{/unless}}
      {{svg-jar
        'chevron-up-16'
        id='hidetimeline-icon'
        class=(if
          this.isTimelineActive
          'octicon align-middle hidetimeline-icon-down'
          'octicon align-middle'
        )
      }}
    </BsButton>
    <div
      id='timeline'
      class='timeline {{unless this.isTimelineActive "timelinehide"}}'
    >
      <Visualization::PageSetup::Timeline::PlotlyTimeline
        @timestamps={{this.timelineTimestamps}}
        @clicked={{this.timelineClicked}}
        @setChildReference={{this.getTimelineReference}}
      />
    </div>
  </div>
{{/if}}