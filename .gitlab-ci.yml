include:
  - project: 'ExplorViz/code/deployment'
    file: '.gitlab-ci-explorviz-common.yml'

default:
  tags:
    - exec-docker
  image: explorviz/build-images:frontend-node-22-alpine
  cache: # Cache modules in between jobs
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/

stages:
  - code-analysis
  - test
  - build
  - deploy:images

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

linting:
  stage: code-analysis
  before_script:
    - node --version
    - npm install -g pnpm
    - pnpm --version
    - pnpm install
  script:
    - pnpm run lint
  artifacts:
    expire_in: 1h
    paths:
      - node_modules

test:
  stage: test
  before_script:
    - node --version
    - npm install -g pnpm
    - pnpm --version
    - pnpm install
  script:
    - pnpm run test
  artifacts:
    expire_in: 1h
    paths:
      - node_modules

build:
  stage: build
  before_script:
    - node --version
    - npm install -g pnpm
  variables:
    VERSION_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  script:
    - pnpm vite build
  artifacts:
    expire_in: 1h
    paths:
      - node_modules
      - dist
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

deploy-merge-request:
  extends:
    - .build-and-deploy
  dependencies:
    - build
  variables:
    DOCKERHUB_TAG: mr-$CI_MERGE_REQUEST_IID
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
